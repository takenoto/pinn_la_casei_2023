def change_layer_fix_neurons_number(eq_params, process_params):
    # Usar SGD no lugar de adam
    # https://stats.stackexchange.com/questions/365778/what-should-i-do-when-my-neural-network-doesnt-generalize-well
    # https://arxiv.org/abs/1712.07628 
    # TODO LRs mais altas com nondim que ja tem erro menor.
    # TODO refaz esse mesmo nondim e adam. E fim. Cabou-se. Credo.
    #1400 epochs 100n x3x8 800p domain 800p test horrivel erro >10
    #1400 epochs 160 x4x8 300p mb50 e sem mb ruinzão tb
    # Fazendo agora 90x8 que tinha dado certo antes
    func = 'tanh'
    n_epochs = 500 #5000 #60000 #1000
    neurons = 90
    dictionary = { 
        f'{neurons}x8 {func} sgd nondim':{
            "sgd_epochs": n_epochs,
            'layer_size': [1] + [neurons] * 8 + [4],
            'X_S': eq_params.Xm,
            "P_s": eq_params.Pm,
            "S_s":eq_params.So,
            "V_s": process_params.max_reactor_volume
        },
        f'{neurons}x8 {func} adam nondim':{
            "adam_epochs": n_epochs,
            'layer_size': [1] + [neurons] * 8 + [4],
            'X_S': eq_params.Xm,
            "P_s": eq_params.Pm,
            "S_s":eq_params.So,
            "V_s": process_params.max_reactor_volume
        },
        f'{neurons}x8 {func} sgd adam nondim W':{
            "adam_epochs": int(n_epochs/2),
            "sgd_epochs": int(n_epochs/2),
            'layer_size': [1] + [neurons] * 8 + [4],
            'X_S': eq_params.Xm,
            "P_s": eq_params.Pm,
            "S_s":eq_params.So,
            "V_s": process_params.max_reactor_volume,
            'w_S':15,
            'w_P': 3,
        },
        f'{neurons}x8 {func} adam nondim W':{
            "adam_epochs": n_epochs,
            'layer_size': [1] + [neurons] * 8 + [4],
            'X_S': eq_params.Xm,
            "P_s": eq_params.Pm,
            "S_s":eq_params.So,
            "V_s": process_params.max_reactor_volume,
            'w_S':15,
            'w_P': 3,
        },
    }


    for key in dictionary:
        # dictionary[key]["adam_epochs"] = 1000 #85000
        dictionary[key]['activation'] = func
        dictionary[key]['num_domain'] = 300 #100#300
        dictionary[key]['num_test'] = 300 #450#300
        #LBFGS POST AGORA SÃO NÚMEROS!!!!!!!!
        # 0 não roda, um numero roda X vezes
        dictionary[key]["lbfgs_pre"] = 0
        dictionary[key]["lbfgs_post"] = 3
        dictionary[key]['LR'] = 0.0005  
        dictionary[key]['hyperfolder'] = f'fb'#f'fb{neurons}n{func}'
        dictionary[key]['initializer'] = 'Glorot normal' #GLOROT UNIFORM
        
        dictionary

    return dictionary