OPERAÇÃO BATELADA!
SEM NONDIMS!


--------------------

def batch_tests_fixed_neurons_number(eq_params, process_params):
    func = 'tanh'
    #neurons total fixo em 360?
    dictionary = { 
        # -----------------------
        # -----FIXED NEURONS-----
        # -----------------------
        #-------------
        # 720
        #-------------
        f'360x2 {func}':{
            'layer_size': [1] + [360] * 2 + [4],
        },
        f'180x4 {func}':{
            'layer_size': [1] + [180] * 4 + [4],
        },
        f'120x6 {func}':{
            'layer_size': [1] + [120] * 6 + [4],
        },
        f'90x8 {func}':{
            'layer_size': [1] + [90] * 8 + [4],
        },
        f'72x10 {func}':{
            'layer_size': [1] + [72] * 10 + [4],
        },
        #-------------
        # 360
        #-------------
        f'180x2 {func}':{
            'layer_size': [1] + [180] * 2 + [4],
        },
        f'90x4 {func}':{
            'layer_size': [1] + [90] * 4 + [4],
        },
        f'60x6 {func}':{
            'layer_size': [1] + [60] * 6 + [4],
        },
        f'45x8 {func}':{
            'layer_size': [1] + [45] * 8 + [4],
        },
        f'36x10 {func}':{
            'layer_size': [1] + [36] * 10 + [4],
        },
        #-------------
        # 180
        #-------------
        f'90x2 {func}':{
            'layer_size': [1] + [90] * 2 + [4],
        },
        f'45x4 {func}':{
            'layer_size': [1] + [45] * 4 + [4],
        },
        f'30x6 {func}':{
            'layer_size': [1] + [30] * 6 + [4],
        },
        f'23x8 {func}':{
            'layer_size': [1] + [23] * 8 + [4],
        },
        f'18x10 {func}':{
            'layer_size': [1] + [18] * 10 + [4],
        },
    }


    for key in dictionary:
        dictionary[key]["adam_epochs"] = 30000
        dictionary[key]['activation'] = func
        dictionary[key]['num_domain'] = 300
        dictionary[key]['num_test'] = 300
        dictionary[key]["lbfgs_pre"] = False
        dictionary[key]["lbfgs_post"] = True

    return dictionary