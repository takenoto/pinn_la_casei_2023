
Feitos a 80 k adams

Melhor foi o 3
swish + [22] x 3

*ERROS*

8 -> 
Best model at step 0:
  train loss: 2.46e+03
  test loss: 2.47e+03
  test metric: []

'train' took 75.270670 s

7 ->
Best model at step 80000:
  train loss: 9.50e-03
  test loss: 9.53e-03
  test metric: []

'train' took 740.605247 s

6 ->
Best model at step 80000:
  train loss: 4.68e+00
  test loss: 4.68e+00
  test metric: []

'train' took 322.516550 s

5 ->
Best model at step 80000:
  train loss: 6.14e+02
  test loss: 6.14e+02
  test metric: []

'train' took 519.075542 s

4 ->
Best model at step 80000:
  train loss: 5.51e+00
  test loss: 6.92e+00
  test metric: []

'train' took 236.516116 s

3 ->
Best model at step 75000:
  train loss: 3.53e-03
  test loss: 3.51e-03
  test metric: []

'train' took 351.030452 s

2 ->
Best model at step 80000:
  train loss: 5.01e+00
  test loss: 6.14e+00
  test metric: []

'train' took 137.297847 s

1 ->
Best model at step 75000:
  train loss: 6.80e-03
  test loss: 6.49e-03
  test metric: []

'train' took 231.556524 s



-----------------------------------------------

params:


default_adam_epochs = 16000
# default_layer_size = [1] + [36] * 4 + [4]
default_layer_size = [1] + [22] * 4 + [4]
default_num_domain = 800
default_num_test = 1000

def iterate_cstr_convergence(
    eq_params, process_params
):
    
    # selu ficou horr√≠vel  
    dictionary = {
        'cstr-1':{
            'layer_size': [1] + [16] * 3 + [4],
            'activation':'swish',
            'initializer': 'Glorot uniform'
        },
        'cstr-2':{
            'layer_size': [1] + [16] * 3 + [4],
            'activation':'tanh',
            'initializer': 'Glorot uniform'
        },
        'cstr-3':{
            'layer_size': [1] + [22] * 3 + [4],
            'activation':'swish',
            'initializer': 'Glorot uniform'
        },
        'cstr-4':{
            'layer_size': [1] + [22] * 3 + [4],
            'activation':'tanh',
            'initializer': 'Glorot uniform'
        },
        'cstr-5':{
            'layer_size': [1] + [32] * 3 + [4],
            'activation':'swish',
            'initializer': 'Glorot uniform'
        },
        'cstr-6':{
            'layer_size': [1] + [32] * 3 + [4],
            'activation':'tanh',
            'initializer': 'Glorot uniform'
        },
        'cstr-7':{
            'layer_size': [1] + [44] * 3 + [4],
            'activation':'swish',
            'initializer': 'Glorot uniform'
        },
        'cstr-8':{
            'layer_size': [1] + [44] * 3 + [4],
            'activation':'tanh',
            'initializer': 'Glorot uniform'
        },
    }

    for key in dictionary:
        dictionary[key]["adam_epochs"] = 80000 #default_adam_epochs
        dictionary[key]["num_domain"] = default_num_domain
        dictionary[key]["num_test"] = default_num_test
        dictionary[key]["lbfgs_pre"] = False
        dictionary[key]["lbfgs_post"] = False

    return dictionary